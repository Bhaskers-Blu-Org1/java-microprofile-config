
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:2.5'
    }
}

apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'liberty'

group = 'com.ibm.developer.code'
version = '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    appName = 'Config'
    testServerHttpPort = 9080
    testServerHttpsPort = 9443
    warContext = "${appName}"
}

liberty {
    server {
        configDirectory = file('src/main/liberty/config')
        bootstrapProperties = ['default.http.port':testServerHttpPort, 'default.https.port':testServerHttpsPort]
    }
    packageLiberty {
        include = 'usr'
    }
}

repositories {
    mavenCentral()
}

sourceSets {
    integrationTest
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    providedCompile 'org.eclipse.microprofile:microprofile-bom:1.1.0'
    testCompile 'junit:junit:4.12'
    integrationTestRuntime 'org.apache.cxf:cxf-rt-rs-client:3.1.13'
    libertyRuntime 'io.openliberty:openliberty-runtime:18.0.0.2'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

libertyStart {
    doLast {
        println "The server is now running at http://localhost:${testServerHttpPort}/${warContext}"
        println "To stop the server run './gradlew libertyStop'"
    }
}

task libertyIntegrationTestStart(type: net.wasdev.wlp.gradle.plugins.tasks.StartTask) {
    description 'Starts the WebSphere Liberty Profile server for integration testing.'
    dependsOn libertyCreate, installApps
    def trigger = new File(temporaryDir, 'trigger')
    gradle.taskGraph.afterTask { Task task, TaskState taskState ->
        if (task == integrationTest && taskState.failure) {
            trigger.text = new Date()
        }
    }
    inputs.files trigger, {
        integrationTest.inputs.files
    }
    outputs.dirs {
        integrationTest.outputs.files
    }
    logging.level = LogLevel.DEBUG
}

task libertyIntegrationTestStop(type: net.wasdev.wlp.gradle.plugins.tasks.StopTask) {
    description 'Stops the WebSphere Liberty Profile server for integration testing.'
    onlyIf {
        libertyIntegrationTestStart.state.didWork
    }
}

task integrationTest(type: Test) {
    group 'Verification'
    description 'Runs the integration tests.'
    dependsOn libertyIntegrationTestStart
    finalizedBy libertyIntegrationTestStop
    testClassesDirs = files(tasks.getByName(sourceSets.integrationTest.compileJavaTaskName).destinationDir)
    classpath = sourceSets.integrationTest.runtimeClasspath
    inputs.files installApps
    systemProperties = ['liberty.test.port': testServerHttpPort, 'war.context': warContext]
    testLogging {
        exceptionFormat 'full'
    }
}

check {
    dependsOn integrationTest
}

wrapper {
    jarFile = rootProject.file('.gradle-wrapper/gradle-wrapper.jar')
}
